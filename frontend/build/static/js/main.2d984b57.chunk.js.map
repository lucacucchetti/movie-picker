{"version":3,"sources":["reportWebVitals.ts","components/Home.tsx","lib/hooksLib.js","components/Login.tsx","components/Signup.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","props","useState","setPublic","setPrivate","movieInput","useRef","currentTitle","setCurrentTitle","movieChoices","setMovieChoices","chosenMovieIndex","setChosenMovieIndex","useEffect","loadPublic","response","message","loadPrivate","onLoad","isAuthenticated","deleteFunction","index","newMovieChoices","splice","addMovie","current","focus","API","get","className","ref","autoFocus","type","placeholder","value","onChange","event","target","onKeyUp","code","disabled","onClick","undefined","map","choice","chosenMovie","Math","floor","random","length","href","useFormFields","initialState","fields","setValues","id","Login","history","useHistory","isLoading","setIsLoading","email","password","handleFieldChange","preventDefault","Auth","signIn","userHasAuthenticated","push","alert","Form","onSubmit","Group","controlId","Label","Control","Button","block","size","Signup","confirmPassword","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","variant","Text","muted","App","isAuthenticating","setIsAuthenticating","routeProps","signOut","currentSession","Navbar","bg","to","Brand","Toggle","Collapse","Nav","activeKey","window","location","pathname","Link","exact","path","Amplify","configure","mandatorySignIn","region","process","userPoolId","identityPoolId","userPoolWebClientId","endpoints","name","endpoint","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d984b57.chunk.js","sourcesContent":["import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { API } from 'aws-amplify';\nimport { useEffect, useRef, useState } from 'react';\nimport { CommonProps } from './CommonProps';\nimport './Home.css';\n\nexport default function Home(props: CommonProps) {\n  const [publicMessage, setPublic] = useState(null);\n  const [privateMessage, setPrivate] = useState(null);\n\n  const movieInput = useRef<any>(null);\n  const [currentTitle, setCurrentTitle] = useState<string>('');\n  const [movieChoices, setMovieChoices] = useState<string[]>([]);\n  const [chosenMovieIndex, setChosenMovieIndex] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Load our public and private API\n    async function onLoad() {\n      try {\n        const response = await loadPublic();\n        setPublic(response.message);\n      } catch (e) {\n        setPublic(null);\n      }\n      try {\n        const response = await loadPrivate();\n        setPrivate(response.message);\n      } catch (e) {\n        setPrivate(null);\n      }\n    }\n\n    onLoad();\n  }, [props.isAuthenticated]);\n\n  function pickARandomMovie() {\n    const chosenMovie = Math.floor(Math.random() * movieChoices.length);\n    setChosenMovieIndex(chosenMovie);\n  }\n\n  const deleteFunction = (index: number) => {\n    const newMovieChoices = [...movieChoices];\n    newMovieChoices.splice(index, 1);\n    setMovieChoices(newMovieChoices);\n  };\n\n  const addMovie = () => {\n    setMovieChoices([...movieChoices, currentTitle]);\n    setCurrentTitle('');\n    movieInput.current?.focus();\n  };\n\n  function loadPublic() {\n    return API.get('random-api', '/public', {});\n  }\n\n  function loadPrivate() {\n    return API.get('random-api', '/private', {});\n  }\n\n  return (\n    <div className=\"Home\">\n      {/* <h3>{publicMessage}</h3>\n      <h3>{privateMessage === false ? 'Cannot load private message' : privateMessage}</h3> */}\n      <header className=\"Home-header\">\n        <h1>Movie Picker</h1>\n        <div key=\"new-movie-div\" className=\"inline\">\n          <input\n            ref={movieInput}\n            autoFocus\n            key=\"new-movie-input\"\n            type=\"text\"\n            placeholder=\"Replace me...\"\n            value={currentTitle}\n            onChange={(event) => setCurrentTitle(event.target.value)}\n            onKeyUp={(event) => event.code === 'Enter' && addMovie()}\n          />\n          <button disabled={currentTitle === ''} onClick={addMovie}>\n            Add movie title\n          </button>\n          {chosenMovieIndex !== undefined ? <h5>We will be watching {movieChoices[chosenMovieIndex]} today</h5> : null}\n          {chosenMovieIndex !== undefined ? (\n            <button\n              onClick={() => {\n                setChosenMovieIndex(undefined);\n                deleteFunction(chosenMovieIndex);\n              }}\n            >\n              Accept\n            </button>\n          ) : null}\n        </div>\n        <br />\n        <h3>Movie List</h3>\n        <table>\n          <tbody>\n            {movieChoices.map((choice, index) => (\n              <tr key={index}>\n                <td>\n                  <button onClick={() => deleteFunction(index)}>X</button>\n                </td>\n                <td>\n                  <span>{choice}</span>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <br />\n        <button onClick={pickARandomMovie}>Pick a random movie!</button>\n      </header>\n      <footer className=\"Home-footer\">\n        Source:{' '}\n        <a className=\"Home-link\" href=\"https://github.com/lucacucchetti/hosted-apps\">\n          https://github.com/lucacucchetti/hosted-apps\n        </a>\n      </footer>\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function (event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value,\n      });\n    },\n  ];\n}\n","import { Auth } from 'aws-amplify';\nimport { FormEvent, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport { useFormFields } from '../lib/hooksLib';\nimport { CommonProps } from './CommonProps';\nimport './Login.css';\n\nexport default function Login(props: CommonProps) {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: '',\n    password: '',\n  });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event: FormEvent) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      // Log the user in\n      await Auth.signIn(fields.email, fields.password);\n      props.userHasAuthenticated(true);\n      // Redirect to the homepage\n      history.push('/');\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control autoFocus type=\"email\" value={fields.email} onChange={handleFieldChange} />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" value={fields.password} onChange={handleFieldChange} />\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" disabled={isLoading || !validateForm()}>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import { ISignUpResult } from 'amazon-cognito-identity-js';\nimport { Auth } from 'aws-amplify';\nimport { FormEvent, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport { useFormFields } from '../lib/hooksLib';\nimport { CommonProps } from './CommonProps';\nimport './Signup.css';\n\nexport default function Signup(props: CommonProps) {\n  const [fields, handleFieldChange] = useFormFields({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    confirmationCode: '',\n  });\n  const history = useHistory();\n  const [newUser, setNewUser] = useState<null | ISignUpResult>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0 && fields.password === fields.confirmPassword;\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event: FormEvent) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      // Sign up the user\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password,\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  async function handleConfirmationSubmit(event: FormEvent) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      // Check the user's confirmation code\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      // Sign the user in\n      await Auth.signIn(fields.email, fields.password);\n\n      props.userHasAuthenticated(true);\n      // Redirect to the homepage\n      history.push('/');\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <Form onSubmit={handleConfirmationSubmit}>\n        <Form.Group controlId=\"confirmationCode\">\n          <Form.Label>Confirmation Code</Form.Label>\n          <Form.Control autoFocus type=\"tel\" onChange={handleFieldChange} value={fields.confirmationCode} />\n          <Form.Text muted>Please check your email for the code.</Form.Text>\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" variant=\"success\" disabled={isLoading || !validateConfirmationForm()}>\n          Verify\n        </Button>\n      </Form>\n    );\n  }\n\n  function renderForm() {\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control autoFocus type=\"email\" value={fields.email} onChange={handleFieldChange} />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" value={fields.password} onChange={handleFieldChange} />\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type=\"password\" onChange={handleFieldChange} value={fields.confirmPassword} />\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" variant=\"success\" disabled={isLoading || !validateForm()}>\n          Signup\n        </Button>\n      </Form>\n    );\n  }\n\n  return <div className=\"Signup\">{newUser === null ? renderForm() : renderConfirmationForm()}</div>;\n}\n","import { useState, useEffect } from 'react';\nimport { Auth } from 'aws-amplify';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Route, Switch } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport './App.css';\n\nfunction App() {\n  // Track if authentication is in progress\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  // Track is the user has authenticated\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n\n  // Props that'll be passed to all the routes\n  const routeProps = { isAuthenticated, userHasAuthenticated };\n\n  useEffect(() => {\n    async function onLoad() {\n      try {\n        // Check if the user is authenticated\n        await Auth.currentSession();\n        userHasAuthenticated(true);\n      } catch (e) {\n        if (e !== 'No current user') {\n          alert(e);\n        }\n      }\n\n      setIsAuthenticating(false);\n    }\n\n    onLoad();\n  }, []);\n\n  async function handleLogout() {\n    // Log the user out\n    await Auth.signOut();\n\n    userHasAuthenticated(false);\n  }\n\n  return !isAuthenticating ? (\n    <div>\n      <Navbar bg=\"dark\">\n        <LinkContainer to=\"/\">\n          <Navbar.Brand>Movie Picker</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Nav activeKey={window.location.pathname}>\n            {isAuthenticated ? (\n              <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n            ) : (\n              <>\n                <LinkContainer to=\"/signup\">\n                  <Nav.Link>Signup</Nav.Link>\n                </LinkContainer>\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>Login</Nav.Link>\n                </LinkContainer>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home {...routeProps} />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login {...routeProps} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <Signup {...routeProps} />\n        </Route>\n      </Switch>\n    </div>\n  ) : null;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Amplify } from \"aws-amplify\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Init Amplify\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: process.env.REACT_APP_REGION,\n    userPoolId: process.env.REACT_APP_USER_POOL_ID,\n    identityPoolId: process.env.REACT_APP_IDENTITY_POOL_ID,\n    userPoolWebClientId: process.env.REACT_APP_USER_POOL_CLIENT_ID,\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"random-api\",\n        region: process.env.REACT_APP_REGION,\n        endpoint: process.env.REACT_APP_API_URL,\n      },\n    ],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}